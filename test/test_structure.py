# -*- coding: utf-8 -*-
from .helper import check_evaluation


def test_flatten():
    for str_expr, str_expected in (
        (
            "Flatten[{{{111, 112, 113}, {121, 122}}, {{211, 212}, {221, 222, 223}}}, {{3}, {1}, {2}}]",
            "{{{111, 121}, {211, 221}}, {{112, 122}, {212, 222}}, {{113}, {223}}}",
        ),
        (
            "Flatten[{{{1, 2, 3}, {4, 5}}, {{6, 7}, {8, 9,  10}}}, {{3}, {1}, {2}}]",
            "{{{1, 4}, {6, 8}}, {{2, 5}, {7, 9}}, {{3}, {10}}}",
        ),
        (
            "Flatten[{{{1, 2, 3}, {4, 5}}, {{6, 7}, {8, 9, 10}}}, {{2}, {1, 3}}]",
            "{{1, 2, 3, 6, 7}, {4, 5, 8, 9, 10}}",
        ),
        ("Flatten[{{1, 2}, {3,4}}, {1, 2}]", "{1, 2, 3, 4}"),
        (
            "m = {{{1, 2}, {3}}, {{4}, {5, 6}}}; Flatten[m, {2}]",
            "{{{1, 2}, {4}}, {{3}, {5, 6}}}",
        ),
        ("Flatten[m, {{2}}]", "{{{1, 2}, {4}}, {{3}, {5, 6}}}"),
        ("Flatten[m, {{2}, {1}}]", "{{{1, 2}, {4}}, {{3}, {5, 6}}}"),
        ("Flatten[m, {{2}, {1}, {3}}]", "{{{1, 2}, {4}}, {{3}, {5, 6}}}"),
        # Tests from Issue #251
        (
            "m = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}; Flatten[m, {1}]",
            "{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}",
        ),
        ("Flatten[m, {2}]", "{{1, 4, 7}, {2, 5, 8}, {3, 6, 9}}"),
        ("Flatten[m, {2, 1}]", "{1, 4, 7, 2, 5, 8, 3, 6, 9}"),
        #
        ("Flatten[{{1, 2}, {3, {4}}}, {{1, 2}}]", "{1, 2, 3, {4}}"),
        ("Flatten[p[1, p[2], p[3]]]", "p[1, 2, 3]"),
        ("Flatten[p[1, p[2], p[3]], 2]", "p[1, 2, 3]"),
    ):
        check_evaluation(str_expr, str_expected)
